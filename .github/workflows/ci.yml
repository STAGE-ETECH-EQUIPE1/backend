name: CI

on:
    push:
        branches: ["preprod", "prod"]
    pull_request:
        branches: ["preprod", "prod"]
    workflow_dispatch:

jobs:
    quality-check:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.3"
                  extensions: mbstring, intl, pdo, pdo_pgsql, pgsql, sqlite3, pdo_sqlite
                  coverage: none

            - name: Install dependencies
              run: composer install --no-interaction --prefer-dist --no-progress

            # ✅ Créer dossier et fichier SQLite test
            - name: Create SQLite test DB
              run: |
                  mkdir -p var
                  touch var/test.db

            # ✅ Injecter la variable dans l’environnement GitHub
            - name: Set DATABASE_URL for test
              run: echo "DATABASE_URL=sqlite:///%CD%/var/test.db" >> $GITHUB_ENV

            - name: Run Doctrine migrations
              run: php bin/console doctrine:migrations:migrate --env=test --no-interaction --no-debug

            - name: Validate DB schema
              run: php bin/console doctrine:schema:validate --env=test --no-interaction --no-debug

            - name: Run PHP CS Fixer
              run: vendor/bin/php-cs-fixer fix --dry-run --diff

            - name: Run PHPStan (non-bloquant)
              run: vendor/bin/phpstan analyse --memory-limit=512M || true

            - name: Run PHPUnit
              run: vendor/bin/phpunit --testdox --no-coverage
