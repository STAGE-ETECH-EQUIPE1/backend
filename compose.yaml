services:
  php:
    user: "${USER_ID}:${GROUP_ID}"
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: symfony_php
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - database
    networks:
      - symfony_app_network

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: symfony_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${POSTGRES_DB:-app}",
          "-U",
          "${POSTGRES_USER:-app}",
        ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      - ./docker/database/data:/var/lib/postgresql/data:rw
    networks:
      - symfony_app_network

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: symfony_nginx
    volumes:
      - .:/var/www/html:delegated
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database
    networks:
      - symfony_app_network

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    container_name: symfony_mercure
    environment:
      # Uncomment the following line to disable HTTPS,
      SERVER_NAME: ":80"
      MERCURE_PUBLISHER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      MERCURE_SUBSCRIBER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://127.0.0.1:8000
    # Comment the following line to disable the development mode
    command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/healthz"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    networks:
      - symfony_app_network

volumes:
  mercure_data:
  mercure_config:
  database_data:

networks:
  symfony_app_network:
    driver: bridge
