services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_php
    volumes:
      - .:/var/www/app
    working_dir: /var/www/app
    depends_on:
      - db
    environment:
      DATABASE_URL: "pgsql://app:app@db:5432/guard"
    networks:
      - symfony

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: symfony_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${POSTGRES_DB:-app}",
          "-U",
          "${POSTGRES_USER:-app}",
        ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - backend
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw

  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    volumes:
      - .:/var/www/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - symfony

volumes:
  database_data:

networks:
  backend:
    driver: bridge
